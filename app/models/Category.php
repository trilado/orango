<?php

/**
 * @Entity("category")
 */
class Category extends Model
{

	/**
	 * @AutoGenerated()
	 * @Column(Type="Int",Key="Primary")
	 */
	public $Id;

	/**
	 * @Column(Type="String")
	 * @Required()
	 */
	public $Name;

	/**
	 * @Column(Type="String")
	 * @Required()
	 */
	public $Slug;
	
	/**
	 * Retorna os posts de uma categoria.
	 * @param int		$p	Pagina de resultados
	 * @param int		$m	Quantidade máxima de resultados retornados
	 * @param string	$o	Coluna para ordenação
	 * @param string	$t	Tipo da ordenação
	 * @return array		Array contendo posts desejados
	 */
	public function getPosts($p = 1, $m = 10, $o = 'UpdatedDate', $t = 'DESC')
	{
		return ViewPost::allByCategory($this->Id, $p, $m, $o, $t);
	}

	public static function deleteAll($ids)
	{
		$db = Database::factory();
		
		$list = '(';
		foreach ($ids as $k => $i)
		{
			$list .= "?,";
			$ids[$k] = (int) $i;
		}
		$list = substr($list, 0, strlen($list) - 1) . ')';
		
		$db->Category->whereArray('Id IN ' . $list, $ids)->deleteAll();
		$db->save();
	}
	
	/**
	 * Retorna uma categoria pelo slug.
	 * @param	string	$slug	slug da categoria desejada.
	 * @return	mixed			resultado encontrado.
	 */
	public static function getBySlug($slug)
	{
		$db = Database::factory();
		return $db->Category->single('Slug = ?', $slug);
	}
	
	public static function findAll()
	{
		$db = Database::factory();
		return $db->Category->all();
	}
}